openapi: "3.0.2"
info:
  title: Game Deal API
  version: "0.0.0"
  license:
    name: MIT
servers:
  - url: https://api.gamedeal.cloudns.nz
    description: production
  - url: http://localhost:3000
    description: localhost
paths:
  /login:
    post:
      summary: Retorna um token de autenticação
      tags:
        - "Auth"
      requestBody:
        $ref: "#/components/requestBodies/login"
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /games:
    post:
      summary: Adicionar um novo jogo
      tags:
        - "Game"
      security:
        - bearerAuth: []

      requestBody:
        $ref: "#/components/requestBodies/add-game"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

    patch:
      summary: Atualizar os dados de um jogo
      tags:
        - "Game"
      security:
        - bearerAuth: []

      requestBody:
        $ref: "#/components/requestBodies/update-game"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

    get:
      summary: Listar todos os jogos
      tags:
        - "Game"
      parameters:
        - in: query
          name: title
          schema:
            type: string
            example: Resident Evil
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        500:
          $ref: "#/components/responses/500"

  /games/{id}:
    get:
      summary: Obter o um jogo a partir do ID
      tags:
        - "Game"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/current:
    get:
      summary: Obter o preço atual de um jogo
      tags:
        - "Game"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game_price"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/history:
    get:
      summary: Obter o histórico de preço de um jogo
      tags:
        - "Game"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
        - in: query
          name: startDate
          schema:
            type: string
            example: 2020-01-01
        - in: query
          name: endDate
          schema:
            type: string
            example: 2025-01-01
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_price"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/lowest:
    get:
      summary: Obter o menor preço já registrado em um jogo
      tags:
        - "Game"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  steam:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
                  nuuvem:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
                  green_man_gaming:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /drops:
    get:
      summary: Obter uma lista de queda de preços
      tags:
        - "Drop"
      parameters:
        - in: query
          name: date
          schema:
            type: string
            example: 2025-01-01
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_price_drop"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        500:
          $ref: "#/components/responses/500"

components:
  schemas:
    game:
      type: object
      properties:
        id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        title:
          type: string
          example: "God of War"
        steam_url:
          type: string
          example: https://store.steampowered.com/app/1593500/God_of_War
        nuuvem_url:
          type: string
          example: https://www.nuuvem.com/br-en/item/god-of-war
          nullable: true
        green_man_gaming_url:
          type: string
          example: https://www.greenmangaming.com/games/god-of-war-pc
          nullable: true
        created_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
        updated_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
          nullable: true

    game_price:
      type: object
      properties:
        id:
          type: string
          example: cac76f00-b85b-11ed-b7cb-0242ac110002
        game_id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        steam_price:
          type: string
          example: "150.99"
        nuuvem_price:
          type: string
          example: "145.99"
          nullable: true
        green_man_gaming_price:
          type: string
          example: "160.45"
          nullable: true
        created_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
        updated_at:
          type: string
          nullable: true
          example: null

    game_price_drop:
      type: object
      properties:
        id:
          type: string
          example: cac76f00-b85b-11ed-b7cb-0242ac110002
        game_id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        platform:
          type: string
          example: Steam
          enum:
            - Steam
            - Nuuvem
            - Green Man Gaming
        old_price:
          type: number
          example: 139.99
        discount_price:
          type: number
          example: 50.38
        created_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
        updated_at:
          type: string
          nullable: true
          example: null

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  requestBodies:
    login:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - "user"
              - "password"
            properties:
              user:
                type: string
                example: Leon
              password:
                type: string
                example: super-strong-password
    add-game:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - "title"
              - "steam_url"
            properties:
              title:
                type: string
                example: "God of War"
                description: "Título do jogo"
              steam_url:
                type: string
                example: https://store.steampowered.com/app/1593500/God_of_War
                description: "URL do jogo no Steam"
              nuuvem_url:
                type: string
                example: https://www.nuuvem.com/br-en/item/god-of-war
                description: "URL do jogo na Nuuvem"
              green_man_gaming_url:
                type: string
                example: https://www.greenmangaming.com/games/god-of-war-pc
                description: "URL do jogo na Green Man Gaming"

    update-game:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                example: "God of War"
                description: "Título do jogo"
              steam_url:
                type: string
                example: https://store.steampowered.com/app/1593500/God_of_War
                description: "URL do jogo no Steam"
              nuuvem_url:
                type: string
                example: https://www.nuuvem.com/br-en/item/god-of-war
                description: "URL do jogo na Nuuvem"
              green_man_gaming_url:
                type: string
                example: https://www.greenmangaming.com/games/god-of-war-pc
                description: "URL do jogo na Green Man Gaming"

  responses:
    400:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                default: 400
              error:
                type: string
                default: Bad Request
              messages:
                type: array
                items:
                  type: string
                  example: '"url" is undefined'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Unauthorized
              message:
                type: string
                example: invalid credential
    404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Not Found
              message:
                type: string
                example: Object not found
    500:
      description: Internal error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Internal Error
              message:
                type: string
                default: Internal Server Error
