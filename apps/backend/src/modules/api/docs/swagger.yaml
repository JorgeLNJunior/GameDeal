openapi: "3.0.2"
info:
  title: Game Deal API
  version: "0.0.0"
  contact:
    name: Jorge
    email: jorgelnjunior@gmail.com
    url: https://github.com/JorgeLNJunior
  description: |-
    Game Deal consiste de um web scrapper que coleta o preço de mais
    de 2 mil jogos do Steam, Nuuvem e Green Man Gaming diariamente e envia
    notificações a cada queda de preço. Os dados coletados formam um histórico
    de preços que pode ser acessado por meio de uma API REST ou aplicação web.

    Alguns links úteis:
    - [Repositório do projeto](https://github.com/JorgeLNJunior/GameDeal)
    - [Canal de notificações no Telegram](https://t.me/s/GameDealApp)
    - [Aplicação Web](https://app.gamedeal.cloudns.nz)

  license:
    name: MIT
    url: https://github.com/JorgeLNJunior/GameDeal/blob/main/LICENSE.md
servers:
  - url: https://api.gamedeal.cloudns.nz
    description: Produção
  - url: http://localhost:3000
    description: Desenvolvimento
paths:
  /login:
    post:
      summary: Retorna um token de autenticação
      description: Retorna um token de autenticação no formato JWT. Usado
        somente para propósitos de administração.
      tags:
        - "Autenticação"
        - "Administração"
      requestBody:
        $ref: "#/components/requestBodies/login"
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /games:
    post:
      summary: Adicionar um novo jogo
      description: Adiciona um novo jogo para ser monitorado. Usado somente para
        propósitos de administração.
      tags:
        - "Jogos"
        - "Administração"
      security:
        - bearerAuth: []

      requestBody:
        $ref: "#/components/requestBodies/add-game"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

    get:
      summary: Listar todos os jogos
      description: Retorna uma lista jogos cadastrados. Suporta paginação,
         ordenação e filtro por título (full text search).
      tags:
        - "Jogos"
      parameters:
        - in: query
          name: title
          schema:
            type: string
            example: Resident Evil
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        500:
          $ref: "#/components/responses/500"

  /games/count:
    get:
      summary: Obter o total de jogos cadastrados
      description: Retorna o total de jogos cadastrados.
      tags:
        - "Jogos"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    example: 385
        500:
          $ref: "#/components/responses/500"

  /games/{id}:
    get:
      summary: Obter o um jogo a partir do ID
      description: Retorna um jogos a partir do seu ID. Caso o ID enviado não
        esteja cadastrado retorna 404.
      tags:
        - "Jogos"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

    patch:
      summary: Atualizar os dados de um jogo
      description: Permite atualizar os dados de um jogo cadastrado. Usado
        somente para propósitos de administração.
      tags:
        - "Jogos"
        - "Administração"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/update-game"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

    delete:
      summary: Remover um jogo
      description: Permite remover um jogo cadastrado. Usado
        somente para propósitos de administração.
      tags:
        - "Jogos"
        - "Administração"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: the game has been deleted
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/current:
    get:
      summary: Obter o preço atual de um jogo
      description: Retorna o preço atual de um jogo em todas as plataformas
        cadastradas a partir do seu ID. Os preço são cadastrados todos os dias
        ás 00:00 UTC-3. Caso o ID enviado não esteja cadastrado, retorna 404.
      tags:
        - "Jogos"
        - "Preços"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/game_price"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/history:
    get:
      summary: Obter o histórico de preço de um jogo
      description: Retorna uma lista de preços diários de um jogo a partir do
        seu ID. Permite paginação, ordenação e filtro por data inicial,
        final e entre duas datas, o formato de data suportado é YYYY-MM-DD.
        Caso o ID enviado não esteja cadastrado, retorna 404.
      tags:
        - "Jogos"
        - "Preços"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
        - in: query
          name: startDate
          schema:
            type: string
            example: 2020-01-01
        - in: query
          name: endDate
          schema:
            type: string
            example: 2025-01-01
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_price"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/lowest:
    get:
      summary: Obter o menor preço já registrado em um jogo
      description: Retorna o menor preço registrado em um jogo em cada uma
        das plataformas registradas. Caso o ID enviado não esteja
        cadastrado, retorna 404.
      tags:
        - "Jogos"
        - "Preços"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do jogo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  steam:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
                  nuuvem:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
                  green_man_gaming:
                    type: object
                    properties:
                      price:
                        type: number
                        nullable: true
                        example: 150.99
                      date:
                        type: string
                        nullable: true
                        example: 2023-01-23T00:30:19.000Z
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/{id}/drops:
    get:
      summary: Obter as quedas de preços de um jogo
      description: Retorna as quedas de preço cadastradas de um jogo a partir
        do seu ID. Permite paginação e ordenação por data. Caso o ID enviado
        não esteja cadastrado, retorna 404.
      tags:
        - "Jogos"
        - "Queda de preços"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_price_drop"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"

  /games/ignore:
    post:
      summary: Adicionar um jogo a ignore list
      description: Adicionar uma lista de jogos a ignore list do scraper que
        descobre novos jogos. Os jogos são inseridos em uma transaction, caso uma
        inserção falhe, as outras serão revertidas. Usado somente para propósitos
        de administração.
      tags:
        - "Jogos"
        - "Administração"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/ignore_games"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/game_ignore_list"
        500:
          $ref: "#/components/responses/500"

    patch:
      summary: Remove uma lista de jogos da ignore list
      description: Remove um jogo da ignore list do scraper que descobre novos
        jogos. Usado somente para propósitos de administração.
      tags:
        - "Jogos"
        - "Administração"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/remove_ignored_games"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: all games have been removed
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

    get:
      summary: Obter jogos ignorados
      description: Retorna uma lista de jogos ignorados pelo scraper que descobre
        novos jogos.
      tags:
        - "Jogos"
      parameters:
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_ignore_list"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        500:
          $ref: "#/components/responses/500"

  /drops:
    get:
      summary: Obter uma lista de queda de preços
      description: Retorna uma lista de queda de preços. Suporta paginação e filtro
        por data no formato YYYY-MM-DD.
      tags:
        - "Queda de preços"
      parameters:
        - in: query
          name: date
          schema:
            type: string
            example: 2025-01-01
        - in: query
          name: page
          schema:
            type: number
            example: 1
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: order
          schema:
            default: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/game_price_drop"
                  count:
                    type: number
                    example: 120
                  page:
                    type: number
                    example: 5
                  totalPages:
                    type: number
                    example: 12
        500:
          $ref: "#/components/responses/500"

components:
  schemas:
    game:
      type: object
      properties:
        id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        title:
          type: string
          example: "God of War"
        steam_url:
          type: string
          example: https://store.steampowered.com/app/1593500/God_of_War
        nuuvem_url:
          type: string
          example: https://www.nuuvem.com/br-en/item/god-of-war
          nullable: true
        green_man_gaming_url:
          type: string
          example: https://www.greenmangaming.com/games/god-of-war-pc
          nullable: true
        created_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
        updated_at:
          type: string
          example: 2023-01-23T00:30:19.000Z
          nullable: true

    game_price:
      type: object
      properties:
        id:
          type: string
          example: cac76f00-b85b-11ed-b7cb-0242ac110002
        game_id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        steam_price:
          type: string
          example: "150.99"
        nuuvem_price:
          type: string
          example: "145.99"
          nullable: true
        green_man_gaming_price:
          type: string
          example: "160.45"
          nullable: true
        date:
          type: string
          example: 2023-01-23

    game_price_drop:
      type: object
      properties:
        id:
          type: string
          example: cac76f00-b85b-11ed-b7cb-0242ac110002
        game_id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        store:
          type: string
          example: Steam
          enum:
            - Steam
            - Nuuvem
            - Green Man Gaming
        old_price:
          type: number
          example: 139.99
        discount_price:
          type: number
          example: 50.38
        date:
          type: string
          example: 2023-01-23

    game_ignore_list:
      type: object
      properties:
        id:
          type: string
          example: b1a382ce-b85b-11ed-b7cb-0242ac110002
        title:
          type: string
          example: Mineirinho Ultra Adventures

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  requestBodies:
    login:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - "user"
              - "password"
            properties:
              user:
                type: string
                example: Leon
              password:
                type: string
                example: super-strong-password
    add-game:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - "title"
              - "steam_url"
            properties:
              title:
                type: string
                example: "God of War"
                description: "Título do jogo"
              steam_url:
                type: string
                example: https://store.steampowered.com/app/1593500/God_of_War
                description: "URL do jogo no Steam"
              nuuvem_url:
                type: string
                example: https://www.nuuvem.com/br-en/item/god-of-war
                description: "URL do jogo na Nuuvem"
              green_man_gaming_url:
                type: string
                example: https://www.greenmangaming.com/games/god-of-war-pc
                description: "URL do jogo na Green Man Gaming"

    update-game:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                example: "God of War"
                description: "Título do jogo"
              steam_url:
                type: string
                example: https://store.steampowered.com/app/1593500/God_of_War
                description: "URL do jogo no Steam"
              nuuvem_url:
                type: string
                example: https://www.nuuvem.com/br-en/item/god-of-war
                description: "URL do jogo na Nuuvem"
              green_man_gaming_url:
                type: string
                example: https://www.greenmangaming.com/games/god-of-war-pc
                description: "URL do jogo na Green Man Gaming"

    ignore_games:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              titles:
                type: array
                items:
                  type: string
                  example: Mineirinho Ultra Adventures

    remove_ignored_games:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              removeIds:
                type: array
                items:
                  type: string
                  example: b1a382ce-b85b-11ed-b7cb-0242ac110002

  responses:
    400:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                default: 400
              error:
                type: string
                default: Bad Request
              messages:
                type: array
                items:
                  type: string
                  example: '"url" is undefined'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Unauthorized
              message:
                type: string
                example: invalid credential
    404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Not Found
              message:
                type: string
                example: Object not found
    500:
      description: Internal error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: Internal Error
              message:
                type: string
                default: Internal Server Error
